>> con trỏ iterator
    - là đối tượng dùng được duyệt qua các phần tử trong cấu trúc dữ liệu
    // Khai báo iterator
    vector<int>::iterator it;

    - advance(it,k) : dịch con trỏ k lần, hàm này không có giá trị trả về.


>> Vector
    - thay đổi kích thước của vector
        v.resize(n)
        nếu n lớn hơn kích thước hiện tại của vetor thì sẽ tự động thêm các phần tử = 0
        nếu n nhỏ hơn thì các phần tử lớn hơn hoặc bằng sẽ bị xóa đi

    - pushback : thêm phần tử vào cuối
    - popback : xóa phần tử ở cuối
    - Để lấy ra phần tử đầu tiên trong vector v bạn có thể dùng v[0] hoặc dùng hàm v.front().
    - Để lấy ra phần tử cuối cùng trong vector v bạn có thể dùng v[v.size() - 1] hoặc dùng hàm v.back().
    - erase : xóa các phần tử trong vector

>> List
- list được thực hiện như double-linked list. Mỗi phần tử trong list sẽ liên kết với phần tử trước và sau nó.
- điểm yếu của list là khả năng truy cập các phần tử, nó không thể truy xuất ra từng phần tử mà phải thông qua vị trí đầu hoặc cuối của list.

- front() : giá trị đầu tiên trong list
- back(): giá trị cuối cùng trong list
- empty() : kiểm tra list có rỗng hay không
- size() : lấy kích thước của list
- push_front() : thêm vào đầu của list
- pop_front() : thêm vào cuối của list
- push_back() : thêm vào cuối list
- remove() : xóa tất cả phần tử có giá trị nào đó trong list
    ví dụ xóa phần tử a trong list dùng a.remove()
- erase() : xóa phần tử trong list

>> set
- thư viện <set>
- là một loại associative containers để lưu trữ các phần tử không bị trùng lặp

- size() : trả về kích thước hiện tại
- empty() : trả về true nếu set rỗng
- insert() : thêm giá trị 
- find() : kiểm tra giá trị tồn tại của một hàm set
- erase() : xóa một phần tử trong set
- upper_bound() :  Trả về iterator đến vị trí phần tử nhỏ nhất mà lớn hơn khóa, nếu không tìm thấy trả về vị trí “end” của set.. ĐPT O(logN). 
- lower_bound() : Trả về iterator đến vị trí phần tử nhỏ nhất mà không nhỏ hơn (lớn hơn hoặc bằng) khóa (dĩ nhiên là theo phép so sánh), nếu không tìm thấy trả về vị trí “end” của set. ĐPT O(logN).

>> stack
- size : trả về kích thước hiện tại của stack. ĐPT O(1).
- empty : true stack nếu rỗng, và ngược lại. ĐPT O(1).
- push : đẩy phần tử vào stack. ĐPT O(1).
- pop : loại bỏ phẩn tử ở đỉnh của stack. ĐPT O(1).
- top : truy cập tới phần tử ở đỉnh stack. ĐPT O(1).

>> Queue
- là một loại containers, được htieest kế hoạt động theo kiểu FIFO
- size() : trả về số lượng phần tử của Queue
- empty() : kiểm tra rỗng
font() : truy xuất phần tử đầu tiên
- back() : truy xuất phần tử cuối Queue
- push() : thêm phần tử có giá trị x vào cuối queue. Kích thước queue tăng thêm 1
- pop() : loại bỏ phần tử đầu của Queue

>> Map
- là một loại associative containers. Mỗi phần tử là sự kết hợp của khóa (key value)và ánh xạ của nó.
- map không chứ các key mang giá trị giống nhau.
- size() : trả về kích thước hiện tại
- empty() : true nếu rỗng
operator[key] : nếu key đã có trong map, thì hàm này sẽ trả về giá trị mà khóa ánh xạ đến. 
- insert() : chèn phần tử vào map. 
- erase() : 
    + xóa theo iterator
    + xóa theo khóa
- find() : trả về itarator trỏ đến phần tử cần tìm kiếm, nếu không tìm thấy thì trỏ về end.
- lower_bound() : trả về iterator đến vị trí phần tử bé nhất mà không bé hơn
- upper_bound() : trả về iterator đến vị trí phần tử bé nhất mà lớn hơn khóa. Nếu không tìm thấy trả về vị trí end của map.

>> bitset
- là một mảng các phần tử bool, nhưng được tối hóa để phân bổ không gian. Mỗi phần tử chỉ chiếm một bit
- size() : trả về kích thước của bitset
- count() : đếm các bit 1
- test() : trả về giá trị true hoặc false tại 1 bit
- any() : kiểm tra có bit 1 trong setbit hay không
- none() : kiểm tra một bitset có phải toàn bit 0 hay không
- all() : kiểm tra một bitset có phải toàn bit 1 hay không, trả về true nếu có và ngược lại.
- set() : chuyển bit tại vị trí chỉ định thành bit mong muốn
- reset() : chuyển bit chỉ định hoặc tất cả thành bit 0
- flip() : chuyển bit chỉ định hoặc tất cả bit thành bit khác
- to_string() : chuyển bitset về dạng chuỗi nhị phân
- to_ulong() : chuyển bitset về dạng số nguyên.